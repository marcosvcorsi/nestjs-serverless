service:
  name: nestjs-serverless

plugins:
  - serverless-dotenv-plugin
  - serverless-offline
  - serverless-dynamodb-local

provider:
  name: aws
  runtime: nodejs12.x
  stage: ${opt:stage, 'dev'}
  environment:
    FIGHTERS_TABLE_NAME: ${self:custom.FightersTable.name}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:PutItem
        - dynamodb:Scan
        - dynamodb:DeleteItem
        - dynamodb:GetItem
        - dynamodb:UpdateItem
      Resource:
        - ${self:custom.FightersTable.arn}

resources:
  Resources:
    FightersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: FightersTable-${self:provider.stage}
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH

functions:
  main:
    handler: dist/main.handler
    events:
      - http:
          method: ANY
          path: /
      - http:
          method: ANY
          path: '{proxy+}'

custom:
  webpack:
    webpackConfig: ./webpack.config.js
    includeModules: true
  dynamodb:
    stages:
      - dev
      - local
    start:
      port: 8000
      inMemory: true
      migrate: true
  FightersTable:
    name: !Ref FightersTable
    arn: !GetAtt FightersTable.Arn

package:
  excludeDevDependencies: true
